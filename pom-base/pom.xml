<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<name>Base project object model</name>
	<url>http://www.cykcorp.org</url>
	<modelVersion>4.0.0</modelVersion>
	<groupId>org.cyk.pom.base</groupId>
	<artifactId>pom-base</artifactId>
	<version>pom.base.0.1.0</version>
	<packaging>pom</packaging>

	<properties>
		
		<distributionManagement.repository.cyk.url>https://repo.repsy.io/mvn/kycdev/default</distributionManagement.repository.cyk.url>
		<repositories.repository.cyk.url>https://repo.repsy.io/mvn/kycdev/default</repositories.repository.cyk.url>
		
		<!-- Custom -->
		<character.encoding>UTF-8</character.encoding>
		<java.standard.edition.version>11</java.standard.edition.version>
		<java.enterprise.edition.version>8.0.1</java.enterprise.edition.version>
		<org.junit.5.version>5.5.2</org.junit.5.version>
		<org.apache.logging.log4j.version>2.12.1</org.apache.logging.log4j.version>
		<!--<maven.version>3.6.1</maven.version> -->
		<maven.version>3.5.0</maven.version>
		<data.source.host.internet.address>127.0.0.1</data.source.host.internet.address>

		<!-- Configuration -->
		<!-- Project -->
		<project.build.sourceEncoding>${character.encoding}</project.build.sourceEncoding>
		<project.reporting.outputEncoding>${character.encoding}</project.reporting.outputEncoding>
		<failOnMissingWebXml>false</failOnMissingWebXml>
		<project.build.file.name>${project.artifactId}-${project.version}</project.build.file.name>
		<!-- Maven -->
		<org.apache.maven.plugins.maven-compiler-plugin.configuration.source>${java.standard.edition.version}</org.apache.maven.plugins.maven-compiler-plugin.configuration.source>
		<org.apache.maven.plugins.maven-compiler-plugin.configuration.target>${java.standard.edition.version}</org.apache.maven.plugins.maven-compiler-plugin.configuration.target>
		<org.apache.maven.plugins.maven-compiler-plugin.configuration.release>${java.standard.edition.version}</org.apache.maven.plugins.maven-compiler-plugin.configuration.release>
		<maven.compiler.plugin.configuration.source>${java.standard.edition.version}</maven.compiler.plugin.configuration.source>
		<maven.compiler.plugin.configuration.target>${java.standard.edition.version}</maven.compiler.plugin.configuration.target>

		<!-- Version -->
		<!-- Maven -->
		<org.codehaus.mojo.versions-maven-plugin.version>2.7</org.codehaus.mojo.versions-maven-plugin.version>
		<org.codehaus.mojo.templating-maven-plugin.version>1.0.0</org.codehaus.mojo.templating-maven-plugin.version>
		<org.apache.maven.plugins.maven-enforcer-plugin.version>3.0.0-M2</org.apache.maven.plugins.maven-enforcer-plugin.version>
		<org.apache.maven.plugins.maven-enforcer-plugin.executions.execution.configuration.rules.requireMavenVersion.version>${maven.version}</org.apache.maven.plugins.maven-enforcer-plugin.executions.execution.configuration.rules.requireMavenVersion.version>
		<org.apache.maven.plugins.maven-enforcer-plugin.executions.execution.configuration.rules.requireJavaVersion.version>${java.standard.edition.version}</org.apache.maven.plugins.maven-enforcer-plugin.executions.execution.configuration.rules.requireJavaVersion.version>
		<org.apache.maven.plugins.maven-clean-plugin.version>3.1.0</org.apache.maven.plugins.maven-clean-plugin.version>
		<org.apache.maven.plugins.maven-resources-plugin.version>3.1.0</org.apache.maven.plugins.maven-resources-plugin.version>
		<org.apache.maven.plugins.maven-compiler-plugin.version>3.8.0</org.apache.maven.plugins.maven-compiler-plugin.version>
		<org.apache.maven.plugins.maven-compiler-plugin.configuration.source>${java.standard.edition.version}</org.apache.maven.plugins.maven-compiler-plugin.configuration.source>
		<org.apache.maven.plugins.maven-compiler-plugin.configuration.target>${java.standard.edition.version}</org.apache.maven.plugins.maven-compiler-plugin.configuration.target>
		<org.apache.maven.plugins.maven-surefire-plugin.version>3.0.0-M3</org.apache.maven.plugins.maven-surefire-plugin.version>
		<org.apache.maven.plugins.maven-failsafe-plugin.version>3.0.0-M3</org.apache.maven.plugins.maven-failsafe-plugin.version>
		<org.apache.maven.plugins.maven-install-plugin.version>3.0.0-M1</org.apache.maven.plugins.maven-install-plugin.version>
		<org.apache.maven.plugins.maven-jar-plugin.version>3.1.1</org.apache.maven.plugins.maven-jar-plugin.version>
		<org.apache.maven.plugins.maven-war-plugin.version>3.2.2</org.apache.maven.plugins.maven-war-plugin.version>
		<org.apache.maven.plugins.maven-site-plugin.version>3.7.1</org.apache.maven.plugins.maven-site-plugin.version>
		<org.apache.maven.plugins.maven-deploy-plugin.version>3.0.0-M1</org.apache.maven.plugins.maven-deploy-plugin.version>

		<!-- Java -->
		<javax.javaee-api.version>${java.enterprise.edition.version}</javax.javaee-api.version>
		<!-- Java Enterprise Edition -->
			<!-- Jakarta -->
		<jakarta.platform.jakarta.jakartaee-api.version>8.0.0</jakarta.platform.jakarta.jakartaee-api.version>
			<!-- Microprofile -->
		<org.eclipse.microprofile.microprofile.version>3.3</org.eclipse.microprofile.microprofile.version>
		<org.eclipse.microprofile.openapi.microprofile-openapi-api.version>1.1.2</org.eclipse.microprofile.openapi.microprofile-openapi-api.version>
			<!-- Wildfly -->
		<wildfly.version>22.0.0.Final</wildfly.version>
        <org.wildfly.bom.wildfly-jakartaee8.version>${wildfly.version}</org.wildfly.bom.wildfly-jakartaee8.version>
        <org.wildfly.bom.wildfly-microprofile.version>${wildfly.version}</org.wildfly.bom.wildfly-microprofile.version>
        <org.wildfly.plugins.wildfly-jar-maven-plugin.version>3.0.2.Final</org.wildfly.plugins.wildfly-jar-maven-plugin.version>
		<org.wildfly.wildfly-datasources-galleon-pack.version>1.2.0.Final</org.wildfly.wildfly-datasources-galleon-pack.version>
		
		<javax.annotation.javax.annotation-api.version>1.3.2</javax.annotation.javax.annotation-api.version>
		<javax.xml.bind.jaxb-api.version>2.4.0-b180830.0359</javax.xml.bind.jaxb-api.version>

		<!-- Others -->
		<org.projectlombok.lombok.version>1.18.10</org.projectlombok.lombok.version> <!-- Getter and setter -->
		<org.mapstruct.mapstruct.version>1.3.0.Final</org.mapstruct.mapstruct.version> <!-- mapping between object -->
		<org.mapstruct.mapstruct-processor.version>1.3.0.Final</org.mapstruct.mapstruct-processor.version>

		<!-- <org.mapstruct.mapstruct-jdk8.version>1.2.0.Final</org.mapstruct.mapstruct-jdk8.version> --> <!-- mapping between object -->
		<!-- <org.mapstruct.mapstruct-processor.version>1.2.0.Final</org.mapstruct.mapstruct-processor.version> -->
		<!-- Lombok and mapstruct version must be compatible -->
		<org.apache.commons.commons-lang3.version>3.9</org.apache.commons.commons-lang3.version>
		<junit.junit.version>4.13-beta-3</junit.junit.version>
		<org.junit.jupiter.junit-jupiter-engine.version>${org.junit.5.version}</org.junit.jupiter.junit-jupiter-engine.version>
		<org.junit.vintage.junit-vintage-engine.version>${org.junit.5.version}</org.junit.vintage.junit-vintage-engine.version>
		<org.mockito.mockito-all.version>2.0.2-beta</org.mockito.mockito-all.version>
		<org.assertj.assertj-core.version>3.13.2</org.assertj.assertj-core.version>
		<org.jboss.weld.se.weld-se.version>2.4.8.Final</org.jboss.weld.se.weld-se.version>
		<org.jboss.weld.weld-junit5.version>2.0.0.Final</org.jboss.weld.weld-junit5.version>

		<!-- Logging -->
		<org.slf4j.slf4j-api.version>2.0.0-alpha0</org.slf4j.slf4j-api.version>

		<org.apache.logging.log4j.log4j-core.version>${org.apache.logging.log4j.version}</org.apache.logging.log4j.log4j-core.version>
		<org.apache.logging.log4j.log4j-api.version>${org.apache.logging.log4j.version}</org.apache.logging.log4j.log4j-api.version>
		<!-- Database connector driver -->
		<com.h2database.h2.version>1.4.197</com.h2database.h2.version>
		<mysql.mysql-connector-java.version>8.0.28</mysql.mysql-connector-java.version>
		<com.oracle.ojdbc6.version>11.2.0.4</com.oracle.ojdbc6.version>
		<!-- Dependency injection -->
		<org.jboss.weld.se.weld-se-core.version>3.1.0.Final</org.jboss.weld.se.weld-se-core.version>

		<org.wildfly.plugins.wildfly-maven-plugin>2.0.1.Final</org.wildfly.plugins.wildfly-maven-plugin>
		<io.thorntail.thorntail-maven-plugin.version>2.6.0.Final</io.thorntail.thorntail-maven-plugin.version>
		<io.thorntail.bom.version>2.6.0.Final</io.thorntail.bom.version>
		<org.wildfly.swarm.wildfly-swarm-plugin.version>2017.2.0</org.wildfly.swarm.wildfly-swarm-plugin.version>
		<!--org.wildfly.swarm.wildfly-swarm-plugin.version>2018.5.0</org.wildfly.swarm.wildfly-swarm-plugin.version -->
		<!--org.wildfly.swarm.wildfly-swarm-plugin.version>1.0.0.Alpha4</org.wildfly.swarm.wildfly-swarm-plugin.version -->
		<org.wildfly.swarm.bom-all.version>2017.2.0</org.wildfly.swarm.bom-all.version>

		<io.quarkus.quarkus-maven-plugin.version>0.16.1</io.quarkus.quarkus-maven-plugin.version>
		<io.quarkus.quarkus-bom.version>0.16.1</io.quarkus.quarkus-bom.version>

		<one.util.streamex.version>0.7.0</one.util.streamex.version>

		<io.swagger.swagger.version>1.5.24</io.swagger.swagger.version>
		<io.swagger.swagger-annotations.version>${io.swagger.swagger.version}</io.swagger.swagger-annotations.version>
		<io.swagger.swagger-jaxrs.version>${io.swagger.swagger.version}</io.swagger.swagger-jaxrs.version>
		<com.googlecode.maven-download-plugin.download-maven-plugin.version>1.4.2</com.googlecode.maven-download-plugin.download-maven-plugin.version>
		<com.google.code.maven-replacer-plugin.replacer.version>1.5.3</com.google.code.maven-replacer-plugin.replacer.version>
		
		<mock-server.version>5.6.1</mock-server.version>
		<org.mock-server.mockserver-netty.version>${mock-server.version}</org.mock-server.mockserver-netty.version>
		<org.mock-server.mockserver-client-java.version>${mock-server.version}</org.mock-server.mockserver-client-java.version>
		<org.mock-server.mockserver-maven-plugin.version>${mock-server.version}</org.mock-server.mockserver-maven-plugin.version>
		<org.mock-server.mockserver-maven-plugin.configuration.port>10000</org.mock-server.mockserver-maven-plugin.configuration.port>
		<com.github.fge.jackson-coreutils.version>1.8</com.github.fge.jackson-coreutils.version>
		
		<com.icegreen.greenmail.version>1.5.11</com.icegreen.greenmail.version>
		<org.liquibase.liquibase-maven-plugin.version>3.8.5</org.liquibase.liquibase-maven-plugin.version>
		
		<!-- Keycloak -->
		
		<org.keycloak.version>4.8.3.Final</org.keycloak.version>
	
		<!--
		<org.keycloak.version>8.0.2</org.keycloak.version>
		-->
		<org.keycloak.keycloak-admin-client.version>${org.keycloak.version}</org.keycloak.keycloak-admin-client.version>
		<org.keycloak.keycloak-servlet-filter-adapter.version>${org.keycloak.version}</org.keycloak.keycloak-servlet-filter-adapter.version>
		<org.keycloak.keycloak-authz-client.version>${org.keycloak.version}</org.keycloak.keycloak-authz-client.version>
		<!--
		<org.keycloak.keycloak-admin-client.version>8.0.1</org.keycloak.keycloak-admin-client.version>
		-->
		<!--
		<org.keycloak.keycloak-admin-client.version>8.0.2</org.keycloak.keycloak-admin-client.version>
		-->
		<!--
		<org.hibernate.version>5.4.12.Final</org.hibernate.version>
		-->
		<org.hibernate.version>5.4.28.Final</org.hibernate.version>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Main -->
			<dependency>
	            <groupId>jakarta.platform</groupId>
	            <artifactId>jakarta.jakartaee-api</artifactId>
	            <version>${jakarta.platform.jakarta.jakartaee-api.version}</version>
	            <scope>provided</scope>
	        </dependency>
	        
	        <dependency>
	            <groupId>org.eclipse.microprofile</groupId>
	            <artifactId>microprofile</artifactId>
	            <version>${org.eclipse.microprofile.microprofile.version}</version> 
	            <type>pom</type>
	            <scope>provided</scope>
			</dependency>
			
			<dependency>
			    <groupId>org.eclipse.microprofile.openapi</groupId>
			    <artifactId>microprofile-openapi-api</artifactId>
			    <version>${org.eclipse.microprofile.openapi.microprofile-openapi-api.version}</version>
			</dependency>
			
			<dependency>
				<groupId>javax</groupId>
				<artifactId>javaee-api</artifactId>
				<version>${javax.javaee-api.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>javax.annotation-api</artifactId>
				<version>${javax.annotation.javax.annotation-api.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>javax.xml.bind</groupId>
				<artifactId>jaxb-api</artifactId>
				<version>${javax.xml.bind.jaxb-api.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.mapstruct</groupId>
				<artifactId>mapstruct</artifactId>
				<version>${org.mapstruct.mapstruct.version}</version>
			</dependency>

			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${org.projectlombok.lombok.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>${org.slf4j.slf4j-api.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>${org.apache.logging.log4j.log4j-api.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${org.apache.logging.log4j.log4j-core.version}</version>
			</dependency>

			<dependency>
				<groupId>one.util</groupId>
				<artifactId>streamex</artifactId>
				<version>${one.util.streamex.version}</version>
			</dependency>

			<!-- Test -->
			<!--
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.junit.version}</version>
				<scope>test</scope>
			</dependency>
			
			<dependency>
				<groupId>org.junit.jupiter</groupId>
				<artifactId>junit-jupiter-engine</artifactId>
				<version>${org.junit.jupiter.junit-jupiter-engine.version}</version>
				<scope>test</scope>
			</dependency>
			
			<dependency>
				<groupId>org.junit.vintage</groupId>
				<artifactId>junit-vintage-engine</artifactId>
				<version>${org.junit.vintage.junit-vintage-engine.version}</version>
				<scope>test</scope>
			</dependency>
			
			<dependency>
				<groupId>org.jboss.weld.se</groupId>
				<artifactId>weld-se</artifactId>
				<version>${org.jboss.weld.se.weld-se.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.jboss.weld</groupId>
				<artifactId>weld-junit5</artifactId>
				<version>${org.jboss.weld.weld-junit5.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>${org.assertj.assertj-core.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mockito</groupId>
				<artifactId>mockito-all</artifactId>
				<version>${org.mockito.mockito-all.version}</version>
				<scope>test</scope>
			</dependency>
			-->
			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-jaxrs</artifactId>
				<version>${io.swagger.swagger-jaxrs.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${io.swagger.swagger-annotations.version}</version>
				<scope>provided</scope>
			</dependency>
			
			<dependency>
				<groupId>org.mock-server</groupId>
				<artifactId>mockserver-netty</artifactId>
				<version>${org.mock-server.mockserver-netty.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mock-server</groupId>
				<artifactId>mockserver-client-java</artifactId>
				<version>${org.mock-server.mockserver-client-java.version}</version>
				<scope>test</scope>
			</dependency>
			
			<!-- Needed for mock server -->
			<dependency>
			    <groupId>com.github.fge</groupId>
			    <artifactId>jackson-coreutils</artifactId>
			    <version>${com.github.fge.jackson-coreutils.version}</version>
			    <scope>test</scope>
			</dependency>
			
			<dependency>
			    <groupId>com.icegreen</groupId>
			    <artifactId>greenmail</artifactId>
			    <version>${com.icegreen.greenmail.version}</version>
			    <scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>versions-maven-plugin</artifactId>
					<version>${org.codehaus.mojo.versions-maven-plugin.version}</version>
					<configuration>
						<generateBackupPoms>false</generateBackupPoms>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${org.apache.maven.plugins.maven-clean-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${org.apache.maven.plugins.maven-resources-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${org.apache.maven.plugins.maven-compiler-plugin.version}</version>
					<configuration>
						<source>${org.apache.maven.plugins.maven-compiler-plugin.configuration.source}</source>
						<target>${org.apache.maven.plugins.maven-compiler-plugin.configuration.target}</target>
						<release>${org.apache.maven.plugins.maven-compiler-plugin.configuration.release}</release>
						<annotationProcessorPaths>
							<path>
								<groupId>org.mapstruct</groupId>
								<artifactId>mapstruct-processor</artifactId>
								<version>${org.mapstruct.mapstruct-processor.version}</version>
							</path>
							<path>
								<groupId>org.projectlombok</groupId>
								<artifactId>lombok</artifactId>
								<version>${org.projectlombok.lombok.version}</version>
							</path>
						</annotationProcessorPaths>
						<compilerArgs>
							<compilerArg>
								-Amapstruct.defaultComponentModel=cdi
							</compilerArg>
						</compilerArgs>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${org.apache.maven.plugins.maven-surefire-plugin.version}</version>
					<!--
					<configuration>
						<parallel>all</parallel>
						<threadCount>10</threadCount>
						<perCoreThreadCount>true</perCoreThreadCount>
						
						<forkCount>5C</forkCount>
						<reuseForks>true</reuseForks>
						<argLine>-  - illegal-access=permit -Xmx1024m -XX:MaxPermSize=256m</argLine>
					</configuration>
					-->
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-failsafe-plugin</artifactId>
					<version>${org.apache.maven.plugins.maven-failsafe-plugin.version}</version>
					<configuration>
						<argLine>--illegal-access=permit</argLine>
					</configuration>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>${org.apache.maven.plugins.maven-install-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${org.apache.maven.plugins.maven-jar-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>${org.apache.maven.plugins.maven-war-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>${org.apache.maven.plugins.maven-site-plugin.version}</version>
				</plugin>

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${org.apache.maven.plugins.maven-deploy-plugin.version}</version>
				</plugin>
			</plugins>
		</pluginManagement>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-enforcer-plugin</artifactId>
				<version>${org.apache.maven.plugins.maven-enforcer-plugin.version}</version>
				<executions>
					<execution>
						<id>enforce</id>
						<goals>
							<goal>enforce</goal>
						</goals>
						<configuration>
							<rules>
								<banDuplicatePomDependencyVersions />
								<requireMavenVersion>
									<version>${org.apache.maven.plugins.maven-enforcer-plugin.executions.execution.configuration.rules.requireMavenVersion.version}</version>
								</requireMavenVersion>
								<requireJavaVersion>
									<version>${org.apache.maven.plugins.maven-enforcer-plugin.executions.execution.configuration.rules.requireJavaVersion.version}</version>
								</requireJavaVersion>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>versions-maven-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-clean-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-failsafe-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-install-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-war-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>templating-maven-plugin</artifactId>
				<version>${org.codehaus.mojo.templating-maven-plugin.version}</version>
				<executions>
					<execution>
						<id>filter-src</id>
						<goals>
							<goal>filter-sources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	
		<extensions>
            <extension>
                <groupId>org.apache.maven.wagon</groupId>
                <artifactId>wagon-ftp</artifactId>
                <version>3.2.0</version>
            </extension>
        </extensions>
	</build>

	<dependencies>
		
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<scope>provided</scope>
		</dependency>
	
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${org.apache.commons.commons-lang3.version}</version>
		</dependency>
		<!--
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
		</dependency>

		<dependency>
			<groupId>org.junit.vintage</groupId>
			<artifactId>junit-vintage-engine</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.weld.se</groupId>
			<artifactId>weld-se</artifactId>
		</dependency>

		<dependency>
			<groupId>org.jboss.weld</groupId>
			<artifactId>weld-junit5</artifactId>
		</dependency>

		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
		</dependency>
		-->
		<dependency>
			<groupId>org.mock-server</groupId>
			<artifactId>mockserver-netty</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.mock-server</groupId>
			<artifactId>mockserver-client-java</artifactId>
		</dependency>
		
		<dependency>
		    <groupId>com.icegreen</groupId>
		    <artifactId>greenmail</artifactId>
		</dependency>
		<!--
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
		</dependency>
		-->
		<!--
		<dependency>
		    <groupId>org.eclipse.microprofile.openapi</groupId>
		    <artifactId>microprofile-openapi-api</artifactId>
		    <version>1.1.2</version>
		</dependency>
		-->	
	</dependencies>

	<profiles>
		<!-- Dependency Injection -->
		<profile>
			<id>dependency.injection.weld.se.jboss</id>
			<dependencies>
				<dependency>
					<groupId>org.jboss.weld.se</groupId>
					<artifactId>weld-se-core</artifactId>
					<version>${org.jboss.weld.se.weld-se-core.version}</version>
				</dependency>
			</dependencies>
		</profile>
		
		<!-- Security Single Sign On Server -->
		<!-- 	Keycloak -->
		<profile>
			<id>security.single.sign.on.system.keycloak.dev</id>
			<properties>
				<cyk.variable.keycloak.server.url>${security.single.sign.on.system.keycloak.dev.url}</cyk.variable.keycloak.server.url>				
				<cyk.variable.keycloak.realm.name>${security.single.sign.on.system.keycloak.dev.realm.name}</cyk.variable.keycloak.realm.name>
				<cyk.variable.keycloak.client.identifier>${security.single.sign.on.system.keycloak.dev.client.identifier}</cyk.variable.keycloak.client.identifier>
				<cyk.variable.keycloak.client.secret>${security.single.sign.on.system.keycloak.dev.client.secret}</cyk.variable.keycloak.client.secret>
				<cyk.variable.keycloak.credential.username>${security.single.sign.on.system.keycloak.dev.credential.username}</cyk.variable.keycloak.credential.username>
				<cyk.variable.keycloak.credential.password>${security.single.sign.on.system.keycloak.dev.credential.password}</cyk.variable.keycloak.credential.password>
			</properties>
		</profile>
		
		<profile>
			<id>security.single.sign.on.system.keycloak.test</id>
			<properties>
				<cyk.variable.keycloak.server.url>${security.single.sign.on.system.keycloak.test.url}</cyk.variable.keycloak.server.url>				
				<cyk.variable.keycloak.realm.name>${security.single.sign.on.system.keycloak.test.realm.name}</cyk.variable.keycloak.realm.name>
				<cyk.variable.keycloak.client.identifier>${security.single.sign.on.system.keycloak.test.client.identifier}</cyk.variable.keycloak.client.identifier>
				<cyk.variable.keycloak.client.secret>${security.single.sign.on.system.keycloak.test.client.secret}</cyk.variable.keycloak.client.secret>
				<cyk.variable.keycloak.credential.username>${security.single.sign.on.system.keycloak.test.credential.username}</cyk.variable.keycloak.credential.username>
				<cyk.variable.keycloak.credential.password>${security.single.sign.on.system.keycloak.test.credential.password}</cyk.variable.keycloak.credential.password>
			</properties>
		</profile>
		
		<profile>
			<id>security.single.sign.on.system.keycloak.prod</id>
			<properties>
				<cyk.variable.keycloak.server.url>${security.single.sign.on.system.keycloak.prod.url}</cyk.variable.keycloak.server.url>				
				<cyk.variable.keycloak.realm.name>${security.single.sign.on.system.keycloak.prod.realm.name}</cyk.variable.keycloak.realm.name>
				<cyk.variable.keycloak.client.identifier>${security.single.sign.on.system.keycloak.prod.client.identifier}</cyk.variable.keycloak.client.identifier>
				<cyk.variable.keycloak.client.secret>${security.single.sign.on.system.keycloak.prod.client.secret}</cyk.variable.keycloak.client.secret>
				<cyk.variable.keycloak.credential.username>${security.single.sign.on.system.keycloak.prod.credential.username}</cyk.variable.keycloak.credential.username>
				<cyk.variable.keycloak.credential.password>${security.single.sign.on.system.keycloak.prod.credential.password}</cyk.variable.keycloak.credential.password>
			</properties>
		</profile>
		
		<!-- Database management system -->
		<profile>
			<id>data.base.management.system</id>
			<properties>
				<data.base.management.system.host>localhost</data.base.management.system.host>
				<data.base.management.system.host.development>${data.base.management.system.host}</data.base.management.system.host.development>
				<data.base.management.system.host.test>${data.base.management.system.host}</data.base.management.system.host.test>
				<data.base.management.system.host.production>${data.base.management.system.host}</data.base.management.system.host.production>
				
				<data.base.management.system.port.development>${data.base.management.system.port}</data.base.management.system.port.development>
				<data.base.management.system.port.test>${data.base.management.system.port}</data.base.management.system.port.test>
				<data.base.management.system.port.production>${data.base.management.system.port}</data.base.management.system.port.production>
			</properties>
		</profile>
		<!--
		<profile>
			<id>data.base.management.system.mysql</id>
			<properties>
				<data.base.management.system.port>3306</data.base.management.system.port>
				<data.base.management.system.port.development>${data.base.management.system.port}</data.base.management.system.port.development>
				<data.base.management.system.port.test>${data.base.management.system.port}</data.base.management.system.port.test>
				<data.base.management.system.port.production>${data.base.management.system.port}</data.base.management.system.port.production>
			</properties>
		</profile>
		-->
		<!-- Oracle -->

		<profile>
			<id>data.base.management.system.oracle</id>
			<properties>
				<data.base.management.system.port>1521</data.base.management.system.port>
			</properties>
		</profile>
		
		<profile>
			<id>data.base.management.system.oracle.dev</id>
			<properties>
				<data.base.management.system.oracle.dev.hostname>localhost</data.base.management.system.oracle.dev.hostname>
				<data.base.management.system.oracle.dev.sid>xe</data.base.management.system.oracle.dev.sid>
				<data.base.management.system.host>${data.base.management.system.oracle.dev.hostname}</data.base.management.system.host>
				<data.base.management.system.sid>${data.base.management.system.oracle.dev.sid}</data.base.management.system.sid>				
			</properties>
		</profile>
		
		<profile>
			<id>data.base.management.system.oracle.test</id>
			<properties>
				<data.base.management.system.host>${data.base.management.system.oracle.test.hostname}</data.base.management.system.host>
				<data.base.management.system.sid>${data.base.management.system.oracle.test.sid}</data.base.management.system.sid>
			</properties>
		</profile>
		
		<profile>
			<id>data.base.management.system.oracle.prod</id>
			<properties>
				<data.base.management.system.host>${data.base.management.system.oracle.prod.hostname}</data.base.management.system.host>
				<data.base.management.system.sid>${data.base.management.system.oracle.prod.sid}</data.base.management.system.sid>
			</properties>
		</profile>
		
		<!-- MySql -->

		<profile>
			<id>data.base.management.system.mysql</id>
			<properties>
				<data.base.management.system.port>3306</data.base.management.system.port>
			</properties>
		</profile>
		
		<profile>
			<id>data.base.management.system.mysql.dev</id>
			<properties>
				<data.base.management.system.mysql.dev.sid>xe</data.base.management.system.mysql.dev.sid>
				<data.base.management.system.sid>${data.base.management.system.mysql.dev.sid}</data.base.management.system.sid>
			</properties>
		</profile>
		
		<profile>
			<id>data.base.management.system.mysql.test</id>
			<properties>
				<data.base.management.system.host>${data.base.management.system.mysql.test.hostname}</data.base.management.system.host>
				<data.base.management.system.sid>${data.base.management.system.mysql.test.sid}</data.base.management.system.sid>
			</properties>
		</profile>
		
		<profile>
			<id>data.base.management.system.mysql.prod</id>
			<properties>
				<data.base.management.system.host>${data.base.management.system.mysql.prod.hostname}</data.base.management.system.host>
				<data.base.management.system.sid>${data.base.management.system.mysql.prod.sid}</data.base.management.system.sid>
			</properties>
		</profile>

		<!-- Database connectivity driver -->
		<profile>
			<id>jdbc.h2</id>
			<dependencies>
				<dependency>
					<groupId>com.h2database</groupId>
					<artifactId>h2</artifactId>
					<version>${com.h2database.h2.version}</version>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>jdbc.mysql</id>
			<dependencies>
				<dependency>
					<groupId>mysql</groupId>
					<artifactId>mysql-connector-java</artifactId>
					<version>${mysql.mysql-connector-java.version}</version>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>jdbc.oracle</id>
			<dependencies>
				<dependency>
					<groupId>com.oracle</groupId>
					<artifactId>ojdbc6</artifactId>
					<version>${com.oracle.ojdbc6.version}</version>
				</dependency>
			</dependencies>
		</profile>

		<!-- Data source -->
		<profile>
			<id>data.source</id>
			<properties>
				<data.source.user>development</data.source.user>
				<data.source.user.development>${data.source.user}</data.source.user.development>
				<data.source.user.test>${data.source.user}</data.source.user.test>
				<data.source.user.production>${data.source.user}</data.source.user.production>
				
				<data.source.password>development</data.source.password>
				<data.source.password.development>${data.source.password}</data.source.password.development>
				<data.source.password.test>${data.source.password}</data.source.password.test>
				<data.source.password.production>${data.source.password}</data.source.password.production>
			</properties>
		</profile>
		<!-- Oracle -->
		<profile>
			<id>data.source.oracle</id>
			<properties>
				<data.source.driver.name>oracle</data.source.driver.name>
				<data.source.className>oracle.jdbc.pool.OracleDataSource</data.source.className>
				<data.base.management.system.port>1521</data.base.management.system.port>				
				<data.source.url>jdbc:oracle:thin:@${data.base.management.system.host}:${data.base.management.system.port}:${data.base.management.system.sid}</data.source.url>
				<data.source.url.development>jdbc:oracle:thin:@${data.base.management.system.host}:${data.base.management.system.port}:${data.base.management.system.sid}</data.source.url.development>
				<data.source.url.test>jdbc:oracle:thin:@${data.base.management.system.host}:${data.base.management.system.port}:${data.base.management.system.sid}</data.source.url.test>
				<data.source.url.production>jdbc:oracle:thin:@${data.base.management.system.host}:${data.base.management.system.port}:${data.base.management.system.sid}</data.source.url.production>
			</properties>
		</profile>
		
		<profile>
			<id>data.source.oracle.dev</id>
			<properties>
				<data.source.oracle.dev.password>${data.source.oracle.dev.user}</data.source.oracle.dev.password>
				<data.source.user>${data.source.oracle.dev.user}</data.source.user>
				<data.source.password>${data.source.oracle.dev.password}</data.source.password>
			</properties>
		</profile>
		
		<profile>
			<id>data.source.oracle.test</id>
			<properties>
				<data.source.oracle.test.password>${data.source.oracle.test.user}</data.source.oracle.test.password>
				<data.source.user>${data.source.oracle.test.user}</data.source.user>
				<data.source.password>${data.source.oracle.test.password}</data.source.password>
			</properties>
		</profile>
		
		<profile>
			<id>data.source.oracle.prod</id>
			<properties>
				<data.source.oracle.prod.password>${data.source.oracle.prod.user}</data.source.oracle.prod.password>
				<data.source.user>${data.source.oracle.prod.user}</data.source.user>
				<data.source.password>${data.source.oracle.prod.password}</data.source.password>
			</properties>
		</profile>
		<!-- H2 -->	
		<profile>
			<id>data.source.h2</id>
			<properties>
				<data.source.driver.name>h2</data.source.driver.name>
				<data.source.className>org.h2.jdbcx.JdbcDataSource</data.source.className>
				<data.source.url>jdbc:h2:mem:test;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE</data.source.url>
				<data.source.user>sa</data.source.user>
				<data.source.password>sa</data.source.password>
			</properties>
		</profile>
		<!-- MySql -->
		<profile>
			<id>data.source.mysql</id>
			<properties>
				<data.source.driver>com.mysql.jdbc.Driver</data.source.driver>
				<data.source.driver.name>mysql</data.source.driver.name>
				<data.source.className>com.mysql.jdbc.jdbc2.optional.MysqlXADataSource</data.source.className>
				<data.source.url>jdbc:mysql://${data.base.management.system.host}:${data.base.management.system.port}/${data.source.schema.name}?useSSL=false&amp;allowPublicKeyRetrieval=true</data.source.url>
				<data.source.url.development>jdbc:mysql://${data.base.management.system.host.development}:${data.base.management.system.port.development}/${data.source.schema.name.development}?useSSL=false&amp;allowPublicKeyRetrieval=true</data.source.url.development>
				<data.source.url.test>jdbc:mysql://${data.base.management.system.host.test}:${data.base.management.system.port.test}/${data.source.schema.name.test}?useSSL=false&amp;allowPublicKeyRetrieval=true</data.source.url.test>
				<data.source.url.production>jdbc:mysql://${data.base.management.system.host.production}:${data.base.management.system.port.production}/${data.source.schema.name.production}?useSSL=false&amp;allowPublicKeyRetrieval=true</data.source.url.production>
			</properties>
		</profile>
		
		<profile>
			<id>data.source.mysql.dev</id>
			<properties>
				<data.source.mysql.dev.password>${data.source.mysql.dev.user}</data.source.mysql.dev.password>
				<data.source.user>${data.source.mysql.dev.user}</data.source.user>
				<data.source.password>${data.source.mysql.dev.password}</data.source.password>
			</properties>
		</profile>
		
		<profile>
			<id>data.source.mysql.test</id>
			<properties>
				<data.source.mysql.test.password>${data.source.mysql.test.user}</data.source.mysql.test.password>
				<data.source.user>${data.source.mysql.test.user}</data.source.user>
				<data.source.password>${data.source.mysql.test.password}</data.source.password>
			</properties>
		</profile>
		
		<profile>
			<id>data.source.mysql.prod</id>
			<properties>
				<data.source.mysql.prod.password>${data.source.mysql.prod.user}</data.source.mysql.prod.password>
				<data.source.user>${data.source.mysql.prod.user}</data.source.user>
				<data.source.password>${data.source.mysql.prod.password}</data.source.password>
			</properties>
		</profile>

		<!-- Application Server -->
		<profile>
			<id>server.wildfly</id>
			<properties>
				<cyk.variable.system.port>8080</cyk.variable.system.port>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<version>${org.wildfly.plugins.wildfly-maven-plugin}</version>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>server.application.jboss.wildfly</id>
			<properties>
				<packaging_profile_identifier>packaging/server/application/jboss/wildfly</packaging_profile_identifier>
				<cyk.variable.system.port>8080</cyk.variable.system.port>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.0.2</version>
						<configuration>
							<webResources>
								<resource>
									<directory>${basedir}/${packaging_profile_identifier}/WEB-INF</directory>
									<filtering>true</filtering>
									<targetPath>WEB-INF</targetPath>
									<includes>
										<include>**/*.*</include>
									</includes>
								</resource>
							</webResources>
							<commands>
								<command>/subsystem=logging/logger=org.cyk:write-attribute(name=level,value=DEBUG)</command>
							</commands>
						</configuration>
					</plugin>

					<plugin>
						<groupId>org.wildfly.plugins</groupId>
						<artifactId>wildfly-maven-plugin</artifactId>
						<version>${org.wildfly.plugins.wildfly-maven-plugin}</version>
					</plugin>
				</plugins>

				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
						<excludes>
							<exclude>**/project-defaults.yml</exclude>
						</excludes>
					</resource>

					<resource>
						<directory>src/main/resources</directory>
						<filtering>false</filtering>
						<excludes>
							<exclude>**/*.*</exclude>
						</excludes>
					</resource>
				</resources>

			</build>
		</profile>
		
		<profile>
			<id>server.application.jboss.wildfly.dev</id>
			<properties>
				<server.application.jboss.wildfly.dev.hostname>localhost</server.application.jboss.wildfly.dev.hostname>
				<wildfly.hostname>${server.application.jboss.wildfly.dev.hostname}</wildfly.hostname>
				<cyk.variable.system.host>${server.application.jboss.wildfly.dev.hostname}</cyk.variable.system.host>
			</properties>
		</profile>
		
		<profile>
			<id>server.application.jboss.wildfly.test</id>
			<properties>
				<server.application.jboss.wildfly.test.password>${server.application.jboss.wildfly.test.username}</server.application.jboss.wildfly.test.password>
				<wildfly.hostname>${server.application.jboss.wildfly.test.hostname}</wildfly.hostname>
				<wildfly.username>${server.application.jboss.wildfly.test.username}</wildfly.username>
				<wildfly.password>${server.application.jboss.wildfly.test.password}</wildfly.password>
				<cyk.variable.system.host>${server.application.jboss.wildfly.test.hostname}</cyk.variable.system.host>
			</properties>
		</profile>
		
		<profile>
			<id>server.application.jboss.wildfly.prod</id>
			<properties>
				<server.application.jboss.wildfly.prod.password>${server.application.jboss.wildfly.prod.username}</server.application.jboss.wildfly.prod.password>
				<wildfly.hostname>${server.application.jboss.wildfly.prod.hostname}</wildfly.hostname>
				<wildfly.username>${server.application.jboss.wildfly.prod.username}</wildfly.username>
				<wildfly.password>${server.application.jboss.wildfly.prod.password}</wildfly.password>
				<cyk.variable.system.host>${server.application.jboss.wildfly.prod.hostname}</cyk.variable.system.host>
			</properties>
		</profile>
		
		<!-- Hibernate -->
		<profile>
			<id>hibernate.hbm2ddl.auto.create</id>
			<properties>
				<hibernate.hbm2ddl.auto>create</hibernate.hbm2ddl.auto>
			</properties>
		</profile>

		<profile>
			<id>hibernate.hbm2ddl.auto.update</id>
			<properties>
				<hibernate.hbm2ddl.auto>update</hibernate.hbm2ddl.auto>
			</properties>
		</profile>

		<profile>
			<id>hibernate.hbm2ddl.auto.validate</id>
			<properties>
				<hibernate.hbm2ddl.auto>validate</hibernate.hbm2ddl.auto>
			</properties>
		</profile>
		
		<!-- Deployment -->
		<profile>
			<id>deployment</id>
			<properties>
				<deployment.host>localhost</deployment.host>
				<deployment.port>8080</deployment.port>
				<deployment.context>/</deployment.context>
				<cyk.variable.system.timestamp.as.string>${maven.build.timestamp}</cyk.variable.system.timestamp.as.string>
				<maven.build.timestamp.format>EEEE dd LLLL yyyy 'at' HH:mm:ss</maven.build.timestamp.format>
			</properties>
		</profile>

		<profile>
			<id>deployment.embedded</id>
			<properties>

			</properties>
		</profile>

		<profile>
			<id>deployment.standalone</id>
			<properties>
				<deployment.standalone.port.offset>0</deployment.standalone.port.offset>
			</properties>
		</profile>

		<profile>
			<id>deployment.client</id>
			<properties>
				<deployment.client.proxy.host>${cyk.variable.system.host}</deployment.client.proxy.host>
				<deployment.client.proxy.port>${cyk.variable.system.port}</deployment.client.proxy.port>
				<deployment.client.proxy.context>/${cyk.variable.system.identifier}/server/api</deployment.client.proxy.context>
				<!--
				<cyk.parameter.proxy.uniform.resource.identifier>http://${deployment.client.proxy.host}:${deployment.client.proxy.port}${deployment.client.proxy.context}</cyk.parameter.proxy.uniform.resource.identifier>
				-->
				<cyk.variable.system.proxy.uniform.resource.identifier>http://${deployment.client.proxy.host}:${deployment.client.proxy.port}${deployment.client.proxy.context}</cyk.variable.system.proxy.uniform.resource.identifier>
				<jboss-web.context-root>${cyk.variable.system.identifier}/client</jboss-web.context-root>
			</properties>
		</profile>

		<profile>
			<id>deployment.client.standalone</id>
			<properties>

			</properties>
		</profile>

		<profile>
			<id>deployment.client.standalone.thorntail</id>
			<properties>
				<deployment.client.proxy.context>/api</deployment.client.proxy.context>
				<!--
				<cyk.variable.system.proxy.uniform.resource.identifier>http://${deployment.client.proxy.host}:${deployment.client.proxy.port}/api</cyk.variable.system.proxy.uniform.resource.identifier>
				-->
			</properties>
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>io.thorntail</groupId>
						<artifactId>bom</artifactId>
						<version>${io.thorntail.bom.version}</version>
						<scope>import</scope>
						<type>pom</type>
					</dependency>
				</dependencies>
			</dependencyManagement>

			<dependencies>
				<dependency>
					<groupId>io.thorntail</groupId>
					<artifactId>cdi</artifactId>
				</dependency>
				<dependency>
					<groupId>io.thorntail</groupId>
					<artifactId>jsf</artifactId>
				</dependency>
				<dependency>
					<groupId>io.thorntail</groupId>
					<artifactId>jaxrs</artifactId>
				</dependency>
				<dependency>
					<groupId>io.thorntail</groupId>
					<artifactId>jsonb</artifactId>
				</dependency>
			</dependencies>
		</profile>
		
		<profile>
			<id>deployment.client.standalone.thorntail.dev</id>
			<properties>
				<deployment.client.proxy.host>localhost</deployment.client.proxy.host>
				<deployment.client.proxy.port>8081</deployment.client.proxy.port>
			</properties>
		</profile>
		
		<profile>
			<id>deployment.client.standalone.thorntail.prod</id>
			<properties>
				<deployment.standalone.port.offset>0</deployment.standalone.port.offset>
				<deployment.client.proxy.host>${cyk.variable.system.identifier}</deployment.client.proxy.host>
				<deployment.client.proxy.port>80</deployment.client.proxy.port>
			</properties>
		</profile>
		
		<profile>
			<id>deployment.client.standalone.thorntail.keycloak</id>
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>io.thorntail</groupId>
						<artifactId>bom</artifactId>
						<version>${io.thorntail.bom.version}</version>
						<scope>import</scope>
						<type>pom</type>
					</dependency>
				</dependencies>
			</dependencyManagement>

			<dependencies>
				<dependency>
					<groupId>io.thorntail</groupId>
					<artifactId>keycloak</artifactId>
				</dependency>
			</dependencies>
		</profile>

		<profile>
			<id>deployment.server</id>
			<properties>
				<jboss-web.context-root>${cyk.variable.system.identifier}/server</jboss-web.context-root>
				<web.context>/${jboss-web.context-root}</web.context>
			</properties>
		</profile>

		<profile>
			<id>deployment.server.standalone</id>

		</profile>

		<profile>
			<id>deployment.standalone.thorntail.build.hollow</id>
			<build>				
				<plugins>
					<plugin>
						<groupId>io.thorntail</groupId>
						<artifactId>thorntail-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>package</goal>
								</goals>									
								<configuration>
									<hollow>true</hollow>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>deployment.standalone.thorntail</id>
			<properties>
				<packaging_profile_identifier>packaging/microprofile/jboss/wildfly/thorntail</packaging_profile_identifier>
				<swarm.port.offset>${deployment.standalone.port.offset}</swarm.port.offset>
			</properties>

			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>io.thorntail</groupId>
							<artifactId>thorntail-maven-plugin</artifactId>
							<version>${io.thorntail.thorntail-maven-plugin.version}</version>
							<executions>
								<execution>
									<goals>
										<goal>package</goal>
									</goals>
									<!--
									<configuration>
										<hollow>true</hollow>
									</configuration>
									-->
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>

				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
						<includes>
							<include>**/project-defaults.yml</include>
						</includes>
					</resource>

					<resource>
						<directory>src/main/resources</directory>
						<filtering>false</filtering>
						<includes>
							<include>**/*.*</include>
						</includes>
					</resource>
				</resources>

				<plugins>
					<plugin>
						<groupId>io.thorntail</groupId>
						<artifactId>thorntail-maven-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.0.2</version>
						<configuration>
							<webResources>
								<resource>
									<directory>${basedir}/${packaging_profile_identifier}/WEB-INF</directory>
									<filtering>true</filtering>
									<targetPath>WEB-INF</targetPath>
									<includes>
										<include>**/*.*</include>
									</includes>
								</resource>
							</webResources>
						</configuration>
					</plugin>

				</plugins>

			</build>

			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>io.thorntail</groupId>
						<artifactId>bom</artifactId>
						<version>${io.thorntail.bom.version}</version>
						<scope>import</scope>
						<type>pom</type>
					</dependency>
				</dependencies>
			</dependencyManagement>
		</profile>

		<profile>
			<id>deployment.server.standalone.thorntail</id>
			<properties>
				<jboss-web.context-root></jboss-web.context-root>				
				<swagger.json>/api/swagger.json</swagger.json>
			</properties>
			
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>io.thorntail</groupId>
						<artifactId>bom</artifactId>
						<version>${io.thorntail.bom.version}</version>
						<scope>import</scope>
						<type>pom</type>
					</dependency>
				</dependencies>
			</dependencyManagement>

			<dependencies>
				<!--
				<dependency>
				    <groupId>io.thorntail</groupId>
				    <artifactId>microprofile</artifactId>
				</dependency>
				-->
				<dependency>
					<groupId>io.thorntail</groupId>
					<artifactId>cdi</artifactId>
				</dependency>
				<dependency>
					<groupId>io.thorntail</groupId>
					<artifactId>jaxrs</artifactId>
				</dependency>
				<dependency>
					<groupId>io.thorntail</groupId>
					<artifactId>jpa</artifactId>
				</dependency>
				<dependency>
					<groupId>io.thorntail</groupId>
					<artifactId>jsonb</artifactId>
				</dependency>
				<!--
				<dependency>
				   <groupId>io.thorntail</groupId>
				   <artifactId>swagger</artifactId>
				   <version>2.6.0.Final</version>
				</dependency>				
				<dependency>
				   <groupId>io.thorntail</groupId>
				   <artifactId>swagger-webapp</artifactId>
				   <version>2.6.0.Final</version>
				</dependency>
				-->
			</dependencies>
		</profile>
		
		<profile>
			<id>deployment.server.standalone.thorntail.dev</id>
			<properties>
				<deployment.standalone.port.offset>1</deployment.standalone.port.offset>
				<deployment.server.standalone.thorntail.dev.host>localhost</deployment.server.standalone.thorntail.dev.host>
				<cyk.variable.system.host>${deployment.server.standalone.thorntail.dev.host}</cyk.variable.system.host>
				<cyk.variable.system.port>8081</cyk.variable.system.port>
			</properties>
		</profile>
		
		<profile>
			<id>deployment.server.standalone.thorntail.prod</id>
			<properties>
				<deployment.standalone.port.offset>0</deployment.standalone.port.offset>
				
				<cyk.variable.system.host>${deployment.server.standalone.thorntail.prod.host}</cyk.variable.system.host>
				<cyk.variable.system.port>80</cyk.variable.system.port>
			</properties>
		</profile>
		
		<!-- Microprofile -->
		<profile>
			<id>microprofile.jboss.wildfly.thorntail</id>
			<properties>
				<packaging_profile_identifier>packaging/microprofile/jboss/wildfly/thorntail</packaging_profile_identifier>
			</properties>

			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>io.thorntail</groupId>
							<artifactId>thorntail-maven-plugin</artifactId>
							<version>${io.thorntail.thorntail-maven-plugin.version}</version>
							<executions>
								<execution>
									<goals>
										<goal>package</goal>
									</goals>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>

				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>
						<includes>
							<include>**/project-defaults.yml</include>
						</includes>
					</resource>

					<resource>
						<directory>src/main/resources</directory>
						<filtering>false</filtering>
						<includes>
							<include>**/*.*</include>
						</includes>
					</resource>
				</resources>

				<plugins>
					<plugin>
						<groupId>io.thorntail</groupId>
						<artifactId>thorntail-maven-plugin</artifactId>
					</plugin>

					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>2.0.2</version>
						<configuration>
							<webResources>
								<resource>
									<directory>${basedir}/${packaging_profile_identifier}/WEB-INF</directory>
									<filtering>true</filtering>
									<targetPath>WEB-INF</targetPath>
									<includes>
										<include>**/*.*</include>
									</includes>
								</resource>
							</webResources>
						</configuration>
					</plugin>
				</plugins>
			</build>

			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>io.thorntail</groupId>
						<artifactId>bom</artifactId>
						<version>${io.thorntail.bom.version}</version>
						<scope>import</scope>
						<type>pom</type>
					</dependency>
				</dependencies>
			</dependencyManagement>
		</profile>
		
		<profile>
			<id>wildfly.jar.maven.plugin</id>
			<build>
				<plugins>
		            <plugin>
		                <groupId>org.wildfly.plugins</groupId>
		                <artifactId>wildfly-jar-maven-plugin</artifactId>
		                <version>${org.wildfly.plugins.wildfly-jar-maven-plugin.version}</version>
		                <configuration>
		                	<feature-packs>
		                		<feature-pack>
		                			<location>wildfly@maven(org.jboss.universe:community-universe)</location>
		                		</feature-pack>
		                	</feature-packs>
		                	<layers>
		                        <layer>jaxrs</layer>
		                    </layers>
		                    <excluded-layers>
		                        <layer>deployment-scanner</layer>
		                    </excluded-layers>
		                    <plugin-options>
		                    	<jboss-fork-embedded>true</jboss-fork-embedded>
		                    </plugin-options>
		                </configuration>
		                <executions>
		                    <execution>
		                        <goals>
		                            <goal>package</goal>
		                        </goals>
		                    </execution>
		                </executions>
		            </plugin>
		        </plugins>
			</build>
		</profile>
		
		<profile>
			<id>wildfly.jar.maven.plugin.server</id>
			<properties>
				<project.build.file.name>ROOT</project.build.file.name>
			</properties>
			<build>
				<finalName>${project.build.file.name}</finalName>
				<plugins>
		            <plugin>
		                <groupId>org.wildfly.plugins</groupId>
		                <artifactId>wildfly-jar-maven-plugin</artifactId>
		                <version>${org.wildfly.plugins.wildfly-jar-maven-plugin.version}</version>
		                <configuration>
		                	<feature-packs>
		                		<feature-pack>
		                			<location>wildfly@maven(org.jboss.universe:community-universe)</location>
		                		</feature-pack>
		                		<feature-pack>
		                            <groupId>org.wildfly</groupId>
		                            <artifactId>wildfly-datasources-galleon-pack</artifactId>
		                            <version>${org.wildfly.wildfly-datasources-galleon-pack.version}</version>
		                        </feature-pack>
		                	</feature-packs>
		                	<layers>
		                    	<layer>cloud-server</layer>
		                    	<layer>microprofile-openapi</layer>
		                    </layers>
		                    <excluded-layers>
		                        <layer>deployment-scanner</layer>
		                    </excluded-layers>
		                    <plugin-options>
		                    	<jboss-fork-embedded>true</jboss-fork-embedded>
		                    </plugin-options>
		                </configuration>
		                <executions>
		                    <execution>
		                        <goals>
		                            <goal>package</goal>
		                        </goals>
		                    </execution>
		                </executions>
		            </plugin>
		        </plugins>
			</build>
		</profile>
		
		<profile>
			<id>wildfly.jar.maven.plugin.client</id>
			<build>
				<plugins>
		            <plugin>
		                <groupId>org.wildfly.plugins</groupId>
		                <artifactId>wildfly-jar-maven-plugin</artifactId>
		                <version>${org.wildfly.plugins.wildfly-jar-maven-plugin.version}</version>
		                <configuration>
		                	<feature-packs>
		                		<feature-pack>
		                			<location>wildfly@maven(org.jboss.universe:community-universe)</location>
		                		</feature-pack>
		                	</feature-packs>
		                	<layers>
		                        <layer>jsf</layer>
		                    </layers>
		                    <excluded-layers>
		                        <layer>deployment-scanner</layer>
		                    </excluded-layers>
		                    <plugin-options>
		                    	<jboss-fork-embedded>true</jboss-fork-embedded>
		                    </plugin-options>
		                </configuration>
		                <executions>
		                    <execution>
		                        <goals>
		                            <goal>package</goal>
		                        </goals>
		                    </execution>
		                </executions>
		            </plugin>
		        </plugins>
			</build>
		</profile>
		
		<profile>
			<id>org.mock-server.build</id>
			<properties>
				<org.mock-server.mockserver-maven-plugin.configuration.logLevel>WARN</org.mock-server.mockserver-maven-plugin.configuration.logLevel>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.mock-server</groupId>
						<artifactId>mockserver-maven-plugin</artifactId>
						<version>${org.mock-server.mockserver-maven-plugin.version}</version>
						<configuration>
							<serverPort>${org.mock-server.mockserver-maven-plugin.configuration.port}</serverPort>
							<initializationClass>${org.mock-server.mockserver-maven-plugin.configuration.initializationClass}</initializationClass>
							<logLevel>${org.mock-server.mockserver-maven-plugin.configuration.logLevel}</logLevel>
						</configuration>
						<executions>
							<execution>
								<id>process-test-classes</id>
								<phase>process-test-classes</phase>
								<goals>
									<goal>start</goal>
								</goals>
							</execution>
							<execution>
								<id>verify</id>
								<phase>verify</phase>
								<goals>
									<goal>stop</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<!-- keycloak -->
		
		<profile>
			<id>keycloak</id>
			<properties>
				<web-app.security-constraint.web-resource-collection.all.url-pattern>/*</web-app.security-constraint.web-resource-collection.all.url-pattern>
				<web-app.login-config.auth-method>KEYCLOAK</web-app.login-config.auth-method>
			</properties>
		</profile>
		
		<!-- web security -->
		
		<profile>
			<id>web.security.disabled</id>
			<properties>
				<web-app.security-constraint.web-resource-collection.all.url-pattern>/_d_i_s_a_b_l_e_d_/*</web-app.security-constraint.web-resource-collection.all.url-pattern>
				<web-app.login-config.auth-method>BASIC</web-app.login-config.auth-method>
			</properties>
		</profile>
		
		<profile>
			<id>web.security.enabled</id>
			<properties>
				<cyk.variable.system.security.authentication.enable>true</cyk.variable.system.security.authentication.enable>
			</properties>
		</profile>
		
		<profile>
			<id>web.security.keycloak.private</id>
			<properties>
				<web-app.security-constraint.web-resource-collection.all.url-pattern>/private/*</web-app.security-constraint.web-resource-collection.all.url-pattern>
				<web-app.login-config.auth-method>KEYCLOAK</web-app.login-config.auth-method>
				<cyk.variable.system.security.authentication.enable>true</cyk.variable.system.security.authentication.enable>
			</properties>
		</profile>
		
		<!-- liquibase -->
		
		<profile>
			<id>org.liquibase.liquibase-maven-plugin</id>
			<properties>
				<org.liquibase.liquibase-maven-plugin.configuration.propertyFile>src/main/resources/liquibase/liquibase.properties</org.liquibase.liquibase-maven-plugin.configuration.propertyFile>
				<org.liquibase.liquibase-maven-plugin.configuration.changeLogFile>src/main/resources/liquibase/change_log_master.xml</org.liquibase.liquibase-maven-plugin.configuration.changeLogFile>
				<org.liquibase.liquibase-maven-plugin.configuration.outputChangeLogFile>target/liquibase_change_log.xml</org.liquibase.liquibase-maven-plugin.configuration.outputChangeLogFile>				
				<org.liquibase.liquibase-maven-plugin.configuration.diffChangeLogFile>target/liquibase_change_log.xml</org.liquibase.liquibase-maven-plugin.configuration.diffChangeLogFile>
				
				<org.liquibase.liquibase-maven-plugin.configuration.referenceUrl>${data.source.url.development}</org.liquibase.liquibase-maven-plugin.configuration.referenceUrl>				
				<org.liquibase.liquibase-maven-plugin.configuration.referenceDriver>${data.source.driver}</org.liquibase.liquibase-maven-plugin.configuration.referenceDriver>
				<org.liquibase.liquibase-maven-plugin.configuration.referenceUsername>${data.source.user.development}</org.liquibase.liquibase-maven-plugin.configuration.referenceUsername>
				<org.liquibase.liquibase-maven-plugin.configuration.referencePassword>${data.source.password.development}</org.liquibase.liquibase-maven-plugin.configuration.referencePassword>
				
				<org.liquibase.liquibase-maven-plugin.configuration.url>${data.source.url.production}</org.liquibase.liquibase-maven-plugin.configuration.url>
				<org.liquibase.liquibase-maven-plugin.configuration.driver>${data.source.driver}</org.liquibase.liquibase-maven-plugin.configuration.driver>				
				<org.liquibase.liquibase-maven-plugin.configuration.username>${data.source.user.production}</org.liquibase.liquibase-maven-plugin.configuration.username>
				<org.liquibase.liquibase-maven-plugin.configuration.password>${data.source.user.production}</org.liquibase.liquibase-maven-plugin.configuration.password>				
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.liquibase</groupId>
						<artifactId>liquibase-maven-plugin</artifactId>
						<version>${org.liquibase.liquibase-maven-plugin.version}</version>
						<configuration>
							<propertyFile>${org.liquibase.liquibase-maven-plugin.configuration.propertyFile}</propertyFile>
							
							<referenceUrl>${org.liquibase.liquibase-maven-plugin.configuration.referenceUrl}</referenceUrl>
							<referenceUsername>${org.liquibase.liquibase-maven-plugin.configuration.referenceUsername}</referenceUsername>
							<referencePassword>${org.liquibase.liquibase-maven-plugin.configuration.referencePassword}</referencePassword>
							<referenceDriver>${org.liquibase.liquibase-maven-plugin.configuration.referenceDriver}</referenceDriver>
							
							<url>${org.liquibase.liquibase-maven-plugin.configuration.url}</url>
							<username>${org.liquibase.liquibase-maven-plugin.configuration.username}</username>
							<password>${org.liquibase.liquibase-maven-plugin.configuration.password}</password>
							<driver>${org.liquibase.liquibase-maven-plugin.configuration.driver}</driver>
							
							<outputChangeLogFile>${org.liquibase.liquibase-maven-plugin.configuration.outputChangeLogFile}</outputChangeLogFile>
							<changeLogFile>${org.liquibase.liquibase-maven-plugin.configuration.changeLogFile}</changeLogFile>
							<diffChangeLogFile>${org.liquibase.liquibase-maven-plugin.configuration.diffChangeLogFile}</diffChangeLogFile>
							
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		
		<!-- Environment -->
		
		<profile>
			<id>environment</id>
			<properties>
				<!-- data source -->
				<data.source.url>${environment.data.source.url}</data.source.url>
				
				<!-- liquibase -->
				<environment.org.liquibase.liquibase-maven-plugin.configuration.driver>${org.liquibase.liquibase-maven-plugin.configuration.driver}</environment.org.liquibase.liquibase-maven-plugin.configuration.driver>
				<environment.org.liquibase.liquibase-maven-plugin.configuration.referenceDriver>${org.liquibase.liquibase-maven-plugin.configuration.driver}</environment.org.liquibase.liquibase-maven-plugin.configuration.referenceDriver>
				<environment.org.liquibase.liquibase-maven-plugin.configuration.username>${org.liquibase.liquibase-maven-plugin.configuration.username}</environment.org.liquibase.liquibase-maven-plugin.configuration.username>
				<environment.org.liquibase.liquibase-maven-plugin.configuration.password>${org.liquibase.liquibase-maven-plugin.configuration.password}</environment.org.liquibase.liquibase-maven-plugin.configuration.password>
				<environment.org.liquibase.liquibase-maven-plugin.configuration.referenceUsername>${org.liquibase.liquibase-maven-plugin.configuration.referenceUsername}</environment.org.liquibase.liquibase-maven-plugin.configuration.referenceUsername>
				<environment.org.liquibase.liquibase-maven-plugin.configuration.referencePassword>${org.liquibase.liquibase-maven-plugin.configuration.referencePassword}</environment.org.liquibase.liquibase-maven-plugin.configuration.referencePassword>
				
				<!-- 	Current -->
				<org.liquibase.liquibase-maven-plugin.configuration.url>${environment.org.liquibase.liquibase-maven-plugin.configuration.url}</org.liquibase.liquibase-maven-plugin.configuration.url>
				<org.liquibase.liquibase-maven-plugin.configuration.username>${environment.org.liquibase.liquibase-maven-plugin.configuration.username}</org.liquibase.liquibase-maven-plugin.configuration.username>
				<org.liquibase.liquibase-maven-plugin.configuration.password>${environment.org.liquibase.liquibase-maven-plugin.configuration.password}</org.liquibase.liquibase-maven-plugin.configuration.password>
				<org.liquibase.liquibase-maven-plugin.configuration.driver>${environment.org.liquibase.liquibase-maven-plugin.configuration.driver}</org.liquibase.liquibase-maven-plugin.configuration.driver>
				<!-- 	Reference -->
				<org.liquibase.liquibase-maven-plugin.configuration.referenceUrl>${environment.org.liquibase.liquibase-maven-plugin.configuration.referenceUrl}</org.liquibase.liquibase-maven-plugin.configuration.referenceUrl>
				<org.liquibase.liquibase-maven-plugin.configuration.referenceUsername>${environment.org.liquibase.liquibase-maven-plugin.configuration.referenceUsername}</org.liquibase.liquibase-maven-plugin.configuration.referenceUsername>
				<org.liquibase.liquibase-maven-plugin.configuration.referencePassword>${environment.org.liquibase.liquibase-maven-plugin.configuration.referencePassword}</org.liquibase.liquibase-maven-plugin.configuration.referencePassword>
				<org.liquibase.liquibase-maven-plugin.configuration.referenceDriver>${environment.org.liquibase.liquibase-maven-plugin.configuration.referenceDriver}</org.liquibase.liquibase-maven-plugin.configuration.referenceDriver>
				
			</properties>
		</profile>
		
		<profile>
			<id>environment.development</id>
			
		</profile>
		
		<profile>
			<id>package.war</id>
			<activation>
				<property>
					<name>package_war</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<cyk.variable.system.timestamp.as.string>${maven.build.timestamp}</cyk.variable.system.timestamp.as.string>
				<maven.build.timestamp.format>EEEE dd LLLL yyyy 'at' HH:mm:ss</maven.build.timestamp.format>
			</properties>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-war-plugin</artifactId>
						<version>${org.apache.maven.plugins.maven-war-plugin.version}</version>
						<configuration>
							<webResources>
								<resource>
									<directory>${basedir}/src/main/webapp/WEB-INF</directory>
									<filtering>true</filtering>
									<targetPath>WEB-INF</targetPath>
									<includes>
										<include>**/*.*</include>
									</includes>
								</resource>
							</webResources>
						</configuration>
					</plugin>
				</plugins>
				
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<filtering>true</filtering>						
					</resource>
				</resources>
			</build>
		</profile>
		
		<profile>
			<id>package.wildfly.bootable.jaxrs.oracle</id>
			<activation>
				<property>
					<name>wildfly_bootable_jaxrs_oracle</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<project.build.file.name>ROOT</project.build.file.name>				
				<deployment.standalone.port.offset>0</deployment.standalone.port.offset>
				<jboss-web.context-root></jboss-web.context-root>
				<propertiesFile>script/wildfly/bootablejar/properties.txt</propertiesFile>
				<scriptsFile>script/wildfly/bootablejar/cli.txt</scriptsFile>
			</properties>
			<build>
				<finalName>${project.build.file.name}</finalName>
				<plugins>
		            <plugin>
		                <groupId>org.wildfly.plugins</groupId>
		                <artifactId>wildfly-jar-maven-plugin</artifactId>
		                <version>${org.wildfly.plugins.wildfly-jar-maven-plugin.version}</version>
		                <configuration>
		                	<feature-packs>
		                		<feature-pack>
		                			<location>wildfly@maven(org.jboss.universe:community-universe)#${wildfly.version}</location>
		                		</feature-pack>
		                		<feature-pack>
		                            <groupId>org.wildfly</groupId>
		                            <artifactId>wildfly-datasources-galleon-pack</artifactId>
		                            <version>${org.wildfly.wildfly-datasources-galleon-pack.version}</version>
		                        </feature-pack>
		                	</feature-packs>
		                	<layers>
		                		<layer>logging</layer>
		                    	<layer>cloud-server</layer>
		                    	<layer>microprofile-openapi</layer>
		                    	<layer>oracle-datasource</layer>
		                    	<layer>management</layer>
		                    </layers>
		                    <excluded-layers>
		                        <layer>deployment-scanner</layer>
		                    </excluded-layers>
		                    <plugin-options>
		                    	<jboss-fork-embedded>true</jboss-fork-embedded>
		                    </plugin-options>
		                    <cloud>
		                    	<type>kubernetes</type>
		                    </cloud>
		                    <cli-sessions>
		                    	<cli-session>
		                    		<propertiesFile>${propertiesFile}</propertiesFile>
		                    		<scriptFiles>
		                    			<scriptFile>${scriptsFile}</scriptFile>
		                    		</scriptFiles>
		                    	</cli-session>
		                    </cli-sessions>
		                </configuration>
		                <executions>
		                    <execution>
		                        <goals>
		                            <goal>package</goal>
		                        </goals>
		                    </execution>
		                </executions>
		            </plugin>
		        </plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.microprofile-ext.openapi-ext</groupId>
				    <artifactId>openapi-ui</artifactId>
				    <version>${org.microprofile-ext.openapi-ext.openapi-ui.version}</version>
				</dependency>
			</dependencies>
		</profile>
		
		<profile>
			<id>package.wildfly.bootable.jaxrs.test</id>
			<!-- This will be used for in memory testing -->
			<properties>
				<project.build.file.name>ROOT</project.build.file.name>				
				<deployment.standalone.port.offset>0</deployment.standalone.port.offset>
				<jboss-web.context-root></jboss-web.context-root>
				<scriptsFile>script/wildfly/bootablejar/test/cli.txt</scriptsFile>
				<propertiesFile>script/wildfly/bootablejar/test/properties.txt</propertiesFile>
			</properties>
			<build>
				<finalName>${project.build.file.name}</finalName>
				<plugins>
		            <plugin>
		                <groupId>org.wildfly.plugins</groupId>
		                <artifactId>wildfly-jar-maven-plugin</artifactId>
		                <version>${org.wildfly.plugins.wildfly-jar-maven-plugin.version}</version>
		                <configuration>
		                	<feature-packs>
		                		<feature-pack>
		                			<location>wildfly@maven(org.jboss.universe:community-universe)#${wildfly.version}</location>
		                		</feature-pack>
		                		<feature-pack>
		                            <groupId>org.wildfly</groupId>
		                            <artifactId>wildfly-datasources-galleon-pack</artifactId>
		                            <version>${org.wildfly.wildfly-datasources-galleon-pack.version}</version>
		                        </feature-pack>
		                	</feature-packs>
		                	<layers>
		                		<layer>logging</layer>
		                    	<layer>cloud-server</layer>
		                    	<layer>microprofile-openapi</layer>
		                    	<layer>h2-datasource</layer>
		                    </layers>
		                    <excluded-layers>
		                        <layer>deployment-scanner</layer>
		                    </excluded-layers>
		                    <!-- hollow jar is required for testing-->
		                    <hollow-jar>true</hollow-jar>
		                    <plugin-options>
		                    	<jboss-fork-embedded>true</jboss-fork-embedded>
		                    	<jboss-maven-dist/>
		                    	<jboss-maven-repo>target/my-maven-repo</jboss-maven-repo>
		                    </plugin-options>
		                    <cloud>
		                    	<type>kubernetes</type>
		                    </cloud>
		                    <cli-sessions>
		                    	<cli-session>
		                    		<propertiesFile>${propertiesFile}</propertiesFile>
		                    		<scriptFiles>
		                    			<scriptFile>${scriptsFile}</scriptFile>
		                    		</scriptFiles>
		                    	</cli-session>
		                    </cli-sessions>
		                </configuration>
		                <executions>
		                    <execution>
		                        <goals>
		                            <goal>package</goal>
		                        </goals>
		                    </execution>
		                </executions>
		            </plugin>
		        	
		        	<!-- skip other test -->
		        	<plugin>
		                <groupId>org.apache.maven.plugins</groupId>
		                <artifactId>maven-surefire-plugin</artifactId>
		                <configuration>
		                    <skipTests>true</skipTests>
		                    <skip>true</skip>
		                </configuration>
		            </plugin>
		            
		            <plugin>
		                <groupId>org.apache.maven.plugins</groupId>
		                <artifactId>maven-failsafe-plugin</artifactId>
		                <executions>
		                    <execution>
		                        <id>jaxrs.surefire</id>
		                        <goals>
		                            <goal>integration-test</goal>
		                            <goal>verify</goal>
		                        </goals>
		                        <configuration>
		                            <failIfNoTests>true</failIfNoTests>
		                            <systemPropertyVariables>
		                            	<bootable.jar>${project.build.directory}/ROOT-bootable.jar</bootable.jar>
		                                <arquillian.xml>arquillian.xml</arquillian.xml>
		                            </systemPropertyVariables>
		                            <redirectTestOutputToFile>false</redirectTestOutputToFile>
		                        </configuration>
		                    </execution>
		                </executions>
		            </plugin>
		        </plugins>
			</build>
			<dependencies>
				<dependency>
					<groupId>org.microprofile-ext.openapi-ext</groupId>
				    <artifactId>openapi-ui</artifactId>
				    <version>${org.microprofile-ext.openapi-ext.openapi-ui.version}</version>
				</dependency>
			</dependencies>
		</profile>
		
		<profile>
			<id>package.wildfly.bootable.ejb.test</id>
			<!-- This will be used for in memory testing -->
			<properties>
				<project.build.file.name>ROOT</project.build.file.name>				
				<deployment.standalone.port.offset>0</deployment.standalone.port.offset>
				<jboss-web.context-root></jboss-web.context-root>
				<scriptsFile>script/wildfly/bootablejar/test/cli.txt</scriptsFile>
				<propertiesFile>script/wildfly/bootablejar/test/properties.txt</propertiesFile>
			</properties>
			<build>
				<finalName>${project.build.file.name}</finalName>
				<plugins>
		            <plugin>
		                <groupId>org.wildfly.plugins</groupId>
		                <artifactId>wildfly-jar-maven-plugin</artifactId>
		                <version>${org.wildfly.plugins.wildfly-jar-maven-plugin.version}</version>
		                <configuration>
		                	<feature-packs>
		                		<feature-pack>
		                			<location>wildfly@maven(org.jboss.universe:community-universe)#${wildfly.version}</location>
		                		</feature-pack>
		                		<feature-pack>
		                            <groupId>org.wildfly</groupId>
		                            <artifactId>wildfly-datasources-galleon-pack</artifactId>
		                            <version>${org.wildfly.wildfly-datasources-galleon-pack.version}</version>
		                        </feature-pack>
		                	</feature-packs>
		                	<layers>
		                		<layer>cloud-server</layer>
		                		<layer>logging</layer>
		                    	<layer>h2-datasource</layer>
		                    </layers>
		                    <excluded-layers>
		                        <layer>deployment-scanner</layer>
		                    </excluded-layers>
		                    <!-- hollow jar is required for testing-->
		                    <hollow-jar>true</hollow-jar>
		                    <plugin-options>
		                    	<jboss-fork-embedded>true</jboss-fork-embedded>
		                    </plugin-options>
		                    <cli-sessions>
		                    	<cli-session>
		                    		<propertiesFile>${propertiesFile}</propertiesFile>
		                    		<scriptFiles>
		                    			<scriptFile>${scriptsFile}</scriptFile>
		                    		</scriptFiles>
		                    	</cli-session>
		                    </cli-sessions>
		                </configuration>
		                <executions>
		                    <execution>
		                        <goals>
		                            <goal>package</goal>
		                        </goals>
		                    </execution>
		                </executions>
		            </plugin>
		        	
		        	<!-- skip other test -->
		        	<plugin>
		                <groupId>org.apache.maven.plugins</groupId>
		                <artifactId>maven-surefire-plugin</artifactId>
		                <configuration>
		                    <skipTests>true</skipTests>
		                    <skip>true</skip>
		                </configuration>
		            </plugin>
		            
		            <plugin>
		                <groupId>org.apache.maven.plugins</groupId>
		                <artifactId>maven-failsafe-plugin</artifactId>
		                <executions>
		                    <execution>
		                        <id>jaxrs.surefire</id>
		                        <goals>
		                            <goal>integration-test</goal>
		                            <goal>verify</goal>
		                        </goals>
		                        <configuration>
		                            <failIfNoTests>true</failIfNoTests>
		                            <systemPropertyVariables>
		                            	<bootable.jar>${project.build.directory}/ROOT-bootable.jar</bootable.jar>
		                                <arquillian.xml>arquillian.xml</arquillian.xml>
		                            </systemPropertyVariables>
		                            <redirectTestOutputToFile>false</redirectTestOutputToFile>
		                        </configuration>
		                    </execution>
		                </executions>
		            </plugin>
		        </plugins>
			</build>
		</profile>
		
		<profile>
			<id>package.wildfly.bootable.jsf</id>
			<properties>
				<project.build.file.name>ROOT</project.build.file.name>
				<deployment.standalone.port.offset>0</deployment.standalone.port.offset>
				<jboss-web.context-root></jboss-web.context-root>
				<propertiesFile>script/wildfly/bootablejar/properties.txt</propertiesFile>
				<scriptsFile>script/wildfly/bootablejar/cli.txt</scriptsFile>
			</properties>
			<build>
				<finalName>${project.build.file.name}</finalName>
				<plugins>
		            <plugin>
		                <groupId>org.wildfly.plugins</groupId>
		                <artifactId>wildfly-jar-maven-plugin</artifactId>
		                <version>${org.wildfly.plugins.wildfly-jar-maven-plugin.version}</version>
		                <configuration>
		                	<feature-packs>
		                		<feature-pack>
		                			<location>wildfly@maven(org.jboss.universe:community-universe)#${wildfly.version}</location>
		                		</feature-pack>
		                		<feature-pack>
		                            <groupId>org.wildfly</groupId>
		                            <artifactId>wildfly-datasources-galleon-pack</artifactId>
		                            <version>${org.wildfly.wildfly-datasources-galleon-pack.version}</version>
		                        </feature-pack>
		                	</feature-packs>
		                	<layers>
		                		<layer>jaxrs</layer>
		                    	<layer>jsf</layer>
		                    	<layer>management</layer>
		                    </layers>
		                    <excluded-layers>
		                        <layer>deployment-scanner</layer>
		                    </excluded-layers>
		                    <plugin-options>
		                    	<jboss-fork-embedded>true</jboss-fork-embedded>
		                    </plugin-options>
		                    <cloud>
		                    	<type>kubernetes</type>
		                    </cloud>
		                    <cli-sessions>
		                    	<cli-session>
		                    		<propertiesFile>${propertiesFile}</propertiesFile>
		                    		<scriptFiles>
		                    			<scriptFile>${scriptsFile}</scriptFile>
		                    		</scriptFiles>
		                    	</cli-session>
		                    </cli-sessions>
		                </configuration>
		                <executions>
		                    <execution>
		                        <goals>
		                            <goal>package</goal>
		                        </goals>
		                    </execution>
		                </executions>
		            </plugin>
		        </plugins>
			</build>
		</profile>
		
		<profile>
			<id>test.wildfly.bootable</id>
			<build>
				<plugins>
					<plugin>
		                <groupId>org.apache.maven.plugins</groupId>
		                <artifactId>maven-surefire-plugin</artifactId>
		                <configuration>
		                    <skipTests>true</skipTests>
		                    <skip>true</skip>
		                </configuration>
		            </plugin>
				</plugins>
			</build>
		</profile>
		
		<profile>
			<id>package.thorntail</id>
			<properties>
				<swarm.port.offset>${deployment.standalone.port.offset}</swarm.port.offset>
				<jboss-web.context-root></jboss-web.context-root>
			</properties>	
		</profile>
		
		<profile>
			<id>package.thorntail.jaxrs</id>
						
			<build>
				<pluginManagement>
					<plugins>
						<plugin>
							<groupId>io.thorntail</groupId>
							<artifactId>thorntail-maven-plugin</artifactId>
							<version>${io.thorntail.thorntail-maven-plugin.version}</version>
							<executions>
								<execution>
									<goals>
										<goal>package</goal>
									</goals>									
									<configuration>
										<hollow>true</hollow>
									</configuration>
								</execution>
							</executions>
						</plugin>
					</plugins>
				</pluginManagement>

				<plugins>
					<plugin>
						<groupId>io.thorntail</groupId>
						<artifactId>thorntail-maven-plugin</artifactId>
					</plugin>
				</plugins>
			</build>
						
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>io.thorntail</groupId>
						<artifactId>bom</artifactId>
						<version>${io.thorntail.bom.version}</version>
						<scope>import</scope>
						<type>pom</type>
					</dependency>
				</dependencies>
			</dependencyManagement>

			<dependencies>
				<dependency>
					<groupId>io.thorntail</groupId>
					<artifactId>cdi</artifactId>
				</dependency>
				<dependency>
					<groupId>io.thorntail</groupId>
					<artifactId>jaxrs</artifactId>
				</dependency>
				<dependency>
					<groupId>io.thorntail</groupId>
					<artifactId>jpa</artifactId>
				</dependency>
				<dependency>
					<groupId>io.thorntail</groupId>
					<artifactId>jsonb</artifactId>
				</dependency>
				<dependency>
					<groupId>io.thorntail</groupId>
					<artifactId>microprofile-openapi</artifactId>
				</dependency>
			</dependencies>
		</profile>
		
		<profile>
			<id>cyk.repo.repsy.io</id>
			<distributionManagement>
				<repository>
					<id>cyk.repo.repsy.io</id>
					<url>https://repo.repsy.io/mvn/kycdev/default</url>
				</repository>
			</distributionManagement>
		</profile>
		
		<profile>
			<id>keycloak.enabled</id>
			<properties>
				<cyk.variable.keycloak.enabled>true</cyk.variable.keycloak.enabled>
				<cyk.variable.system.security.authentication.enable>true</cyk.variable.system.security.authentication.enable>
			</properties>
		</profile>
		
	</profiles>

	<modules>
		<!-- JEE -->

		<module>../pom-jee</module>

		<!-- Spring -->
		<!-- <module>../pom-spring</module> -->
		<!-- Others -->
		<!-- <module>../pom-maven-archetype</module> -->
	</modules>
	
	<distributionManagement>
		<repository>
			<id>repository.devkoms.com</id>
			<url>ftp://devkoms.com/repository/</url>
		</repository>
		<!--
		<repository>
			<id>cyk.repo.repsy.io</id>
			<url>https://repo.repsy.io/mvn/kycdev/default</url>
		</repository>
		-->
	</distributionManagement>
	<!--
	<repositories>
		
		<repository>
			<id>repository.devkoms.com</id>
			<url>ftp://devkoms.com/repository/</url>
		</repository>
	</repositories>
	-->
</project>
